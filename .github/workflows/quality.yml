# This is a basic workflow to help you get started with Actions

name: Quality

# Controls when the workflow will run
on:
  # Triggers the workflow on unit tests success
  workflow_run:
    workflows: [ UnitTests ]
    branches: [ main, stable ]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "quality-check"
  quality-check:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Initialize Python 3.7
        uses: actions/setup-python@v1
        with:
            python-version: 3.7
      - name: Install Python dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8
      - name: install node v12
        uses: actions/setup-node@v1
        with:
            node-version: 12
      - name: install JS dependencies
        run: |
            yarn install
            npm install --save-dev eslint eslint-config-xo babel-eslint
      - name: Lint python with flake8
        run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 ./pycodeanalyzer --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings.
            flake8 ./pycodeanalyzer --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics
      - name: Lint JS with StandardJs
        uses: iCrawl/action-eslint@v1
        with:
            custom-glob: pycodeanalyzer
