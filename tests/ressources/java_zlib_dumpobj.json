[
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "BASE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "NMAX",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "s1",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "s2",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "init"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getValue",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "update",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "index"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Adler32",
                    "copy",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "combine",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "adler1"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "adler2"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "len2"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "Adler32",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Adler32.java",
        "parents": [
            {
                "py/tuple": [
                    "Checksum",
                    "Checksum",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "v",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "crc_table",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "GF2_DIM",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "void",
                    "update",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "index"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "vv"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getValue",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "combine",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "crc1"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "crc2"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "len2"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "gf2_matrix_times",
                    [
                        {
                            "py/tuple": [
                                "long[]",
                                "mat"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "vec"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "gf2_matrix_square",
                    [
                        {
                            "py/tuple": [
                                "long[]",
                                "square"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long[]",
                                "mat"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "CRC32",
                    "copy",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "getCRC32Table",
                    [],
                    "public"
                ]
            }
        ],
        "name": "CRC32",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/CRC32.java",
        "parents": [
            {
                "py/tuple": [
                    "Checksum",
                    "Checksum",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [],
        "methodes": [
            {
                "py/tuple": [
                    "void",
                    "update",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "index"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "init"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getValue",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Checksum",
                    "copy",
                    [],
                    "public"
                ]
            }
        ],
        "name": "Checksum",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Checksum.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "good_length",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "max_lazy",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "nice_length",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "max_chain",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "func",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "Config",
                    "Config",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "good_length"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "max_lazy"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "nice_length"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "max_chain"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "func"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "Config",
        "namespace": "com::jcraft::jzlib::Deflate",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Deflate.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_MEM_LEVEL",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DEFAULT_COMPRESSION",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEF_MEM_LEVEL",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "STORED",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "FAST",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "SLOW",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "Config[]",
                    "config_table",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "String[]",
                    "z_errmsg",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "NeedMore",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BlockDone",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "FinishStarted",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "FinishDone",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "PRESET_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FILTERED",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_HUFFMAN_ONLY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DEFAULT_STRATEGY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_PARTIAL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_SYNC_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FULL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FINISH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "INIT_STATE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BUSY_STATE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "FINISH_STATE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DEFLATED",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "STORED_BLOCK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "STATIC_TREES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DYN_TREES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BINARY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ASCII",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_UNKNOWN",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Buf_size",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "REP_3_6",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "REPZ_3_10",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "REPZ_11_138",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MIN_MATCH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_MATCH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MIN_LOOKAHEAD",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_BITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "D_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BL_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LENGTH_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LITERALS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "L_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "HEAP_SIZE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "END_BLOCK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "ZStream",
                    "strm",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "status",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "pending_buf",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "pending_buf_size",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "pending_out",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "pending",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "wrap",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "data_type",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "method",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "last_flush",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "w_size",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "w_bits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "w_mask",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "window",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "window_size",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "prev",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "head",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "ins_h",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "hash_size",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "hash_bits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "hash_mask",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "hash_shift",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "block_start",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "match_length",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "prev_match",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "match_available",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "strstart",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "match_start",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "lookahead",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "prev_length",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "max_chain_length",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "max_lazy_match",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "level",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "strategy",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "good_match",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "nice_match",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "dyn_ltree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "dyn_dtree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "bl_tree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Tree",
                    "l_desc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Tree",
                    "d_desc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Tree",
                    "bl_desc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "bl_count",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "next_code",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "heap",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "heap_len",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "heap_max",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "depth",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "l_buf",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "lit_bufsize",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "last_lit",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "d_buf",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "opt_len",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "static_len",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "matches",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "last_eob_len",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short",
                    "bi_buf",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "bi_valid",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPHeader",
                    "gheader",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "Deflate",
                    "Deflate",
                    [
                        {
                            "py/tuple": [
                                "ZStream",
                                "strm"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "lm_init",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "tr_init",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "init_block",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "pqdownheap",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "tree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "k"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "smaller",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "tree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "n"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "m"
                            ]
                        },
                        {
                            "py/tuple": [
                                "byte[]",
                                "depth"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "scan_tree",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "tree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "max_code"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "build_bl_tree",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "send_all_trees",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "lcodes"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dcodes"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "blcodes"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "send_tree",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "tree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "max_code"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "put_byte",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "p"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "start"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "put_byte",
                    [
                        {
                            "py/tuple": [
                                "byte",
                                "c"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "put_short",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "putShortMSB",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "b"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "send_code",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "c"
                            ]
                        },
                        {
                            "py/tuple": [
                                "short[]",
                                "tree"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "send_bits",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "value"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "length"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "_tr_align",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "_tr_tally",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "dist"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "lc"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "compress_block",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "ltree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "short[]",
                                "dtree"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "set_data_type",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "bi_flush",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "bi_windup",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "copy_block",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "header"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "flush_block_only",
                    [
                        {
                            "py/tuple": [
                                "boolean",
                                "eof"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate_stored",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "_tr_stored_block",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "stored_len"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "eof"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "_tr_flush_block",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "stored_len"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "eof"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "fill_window",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate_fast",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate_slow",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "longest_match",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "cur_match"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "method"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "windowBits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memLevel"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "strategy"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateReset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateEnd",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateParams",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "_level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "_strategy"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateSetDictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "dictionary"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dictLength"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateCopy",
                    [
                        {
                            "py/tuple": [
                                "ZStream",
                                "dest"
                            ]
                        },
                        {
                            "py/tuple": [
                                "ZStream",
                                "src"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Object",
                    "clone",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "dup",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "dup",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "buf"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "dup",
                    [
                        {
                            "py/tuple": [
                                "int[]",
                                "buf"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "GZIPHeader",
                    "getGZIPHeader",
                    [],
                    "public"
                ]
            }
        ],
        "name": "Deflate",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Deflate.java",
        "parents": [
            {
                "py/tuple": [
                    "Cloneable",
                    "Cloneable",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEF_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_PARTIAL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_SYNC_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FULL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FINISH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_MEM_LEVEL",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "finished",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        },
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "Deflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        },
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "end",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "params",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "strategy"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "setDictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "dictionary"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dictLength"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "finished",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "copy",
                    [
                        {
                            "py/tuple": [
                                "Deflater",
                                "src"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "Deflater",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Deflater.java",
        "parents": [
            {
                "py/tuple": [
                    "ZStream",
                    "ZStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "Deflater",
                    "deflater",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buffer",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "closed",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "syncFlush",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buf1",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "mydeflater",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "close_out",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEFAULT_BUFSIZE",
                    "protected"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "DeflaterOutputStream",
                    "DeflaterOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "DeflaterOutputStream",
                    "DeflaterOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Deflater",
                                "def"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "DeflaterOutputStream",
                    "DeflaterOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Deflater",
                                "deflater"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "DeflaterOutputStream",
                    "DeflaterOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Deflater",
                                "deflater"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "close_out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "write",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "b"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "write",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "b"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "off"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "finish",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "close",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "flush",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setSyncFlush",
                    [
                        {
                            "py/tuple": [
                                "boolean",
                                "syncFlush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "getSyncFlush",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "getDeflater",
                    [],
                    "public"
                ]
            }
        ],
        "name": "DeflaterOutputStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/DeflaterOutputStream.java",
        "parents": [
            {
                "py/tuple": [
                    "FilterOutputStream",
                    "FilterOutputStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [],
        "methodes": [
            {
                "py/tuple": [
                    "GZIPException",
                    "GZIPException",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPException",
                    "GZIPException",
                    [
                        {
                            "py/tuple": [
                                "String",
                                "s"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "GZIPException",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/GZIPException.java",
        "parents": [
            {
                "py/tuple": [
                    "java::io::IOException",
                    "IOException",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "byte",
                    "OS_MSDOS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_AMIGA",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_VMS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_UNIX",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_ATARI",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_OS2",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_MACOS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_TOPS20",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_WIN32",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_VMCMS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_ZSYSTEM",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_CPM",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_QDOS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_RISCOS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "OS_UNKNOWN",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "text",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "fhcrc",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "time",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "xflags",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "os",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "extra",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "name",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "comment",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "hcrc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "crc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "done",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "mtime",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "void",
                    "setModifiedTime",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "mtime"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getModifiedTime",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setOS",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "os"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getOS",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setName",
                    [
                        {
                            "py/tuple": [
                                "String",
                                "name"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "String",
                    "getName",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setComment",
                    [
                        {
                            "py/tuple": [
                                "String",
                                "comment"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "String",
                    "getComment",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setCRC",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "crc"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getCRC",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "put",
                    [
                        {
                            "py/tuple": [
                                "Deflate",
                                "d"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Object",
                    "clone",
                    [],
                    "public"
                ]
            }
        ],
        "name": "GZIPHeader",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/GZIPHeader.java",
        "parents": [
            {
                "py/tuple": [
                    "Cloneable",
                    "Cloneable",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [],
        "methodes": [
            {
                "py/tuple": [
                    "GZIPInputStream",
                    "GZIPInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPInputStream",
                    "GZIPInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "close_in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPInputStream",
                    "GZIPInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Inflater",
                                "inflater"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "close_in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getModifiedtime",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getOS",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "String",
                    "getName",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "String",
                    "getComment",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getCRC",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "readHeader",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "fill",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        }
                    ],
                    "private"
                ]
            }
        ],
        "name": "GZIPInputStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/GZIPInputStream.java",
        "parents": [
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "InflaterInputStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [],
        "methodes": [
            {
                "py/tuple": [
                    "GZIPOutputStream",
                    "GZIPOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPOutputStream",
                    "GZIPOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPOutputStream",
                    "GZIPOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "close_out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "GZIPOutputStream",
                    "GZIPOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Deflater",
                                "deflater"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "close_out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "check",
                    [],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setModifiedTime",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "mtime"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setOS",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "os"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setName",
                    [
                        {
                            "py/tuple": [
                                "String",
                                "name"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setComment",
                    [
                        {
                            "py/tuple": [
                                "String",
                                "comment"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getCRC",
                    [],
                    "public"
                ]
            }
        ],
        "name": "GZIPOutputStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/GZIPOutputStream.java",
        "parents": [
            {
                "py/tuple": [
                    "DeflaterOutputStream",
                    "DeflaterOutputStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [
            "T",
            "K"
        ],
        "members": [
            {
                "py/tuple": [
                    "T",
                    "value",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "GenericClass",
                    "GenericClass",
                    [
                        {
                            "py/tuple": [
                                "T",
                                "val"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "genericMethod",
                    [
                        {
                            "py/tuple": [
                                "K",
                                "otherType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "set",
                    [
                        {
                            "py/tuple": [
                                "T",
                                "t"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "T",
                    "get",
                    [],
                    "public"
                ]
            }
        ],
        "name": "GenericClass",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Generics.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [
            4
        ],
        "linkedGenericTypes": [],
        "members": [],
        "methodes": [],
        "name": "GenericClassIntImpl",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Generics.java",
        "parents": [
            {
                "py/tuple": [
                    "GenericClass",
                    "GenericClass",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MANY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "inflate_mask",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "border",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "TYPE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LENS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "STORED",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "TABLE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BTREE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DTREE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DRY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DONE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BAD",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "mode",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "left",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "table",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "index",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "blens",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "bb",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "tb",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "bl",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "bd",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[][]",
                    "tl",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[][]",
                    "td",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "tli",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "tdi",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "InfCodes",
                    "codes",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "last",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "bitk",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "bitb",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "hufts",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "window",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "end",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "read",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "write",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "check",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "InfTree",
                    "inftree",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "ZStream",
                    "z",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "InfBlocks",
                    "InfBlocks",
                    [
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "proc",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "free",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "set_dictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "d"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "start"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "n"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "sync_point",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate_flush",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "InfBlocks",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/InfBlocks.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int[]",
                    "inflate_mask",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "START",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LEN",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LENEXT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DIST",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DISTEXT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "COPY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LIT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "WASH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BADCODE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "mode",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "len",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "tree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "tree_index",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "need",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "lit",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "get",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "dist",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "lbits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "dbits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "ltree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "ltree_index",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "dtree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "dtree_index",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZStream",
                    "z",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "InfBlocks",
                    "s",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "InfCodes",
                    "InfCodes",
                    [
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        },
                        {
                            "py/tuple": [
                                "InfBlocks",
                                "s"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "bl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bd"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "tl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "tl_index"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "td"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "td_index"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "proc",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "free",
                    [
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate_fast",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "bl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bd"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "tl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "tl_index"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "td"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "td_index"
                            ]
                        },
                        {
                            "py/tuple": [
                                "InfBlocks",
                                "s"
                            ]
                        },
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "InfCodes",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/InfCodes.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MANY",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "fixed_bl",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "fixed_bd",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "fixed_tl",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "fixed_td",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "cplens",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "cplext",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "cpdist",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "cpdext",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BMAX",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "hn",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "v",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "c",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "r",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "u",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "x",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "int",
                    "huft_build",
                    [
                        {
                            "py/tuple": [
                                "int[]",
                                "b"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bindex"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "n"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "s"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "d"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "e"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "t"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "m"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "hp"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "hn"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "v"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate_trees_bits",
                    [
                        {
                            "py/tuple": [
                                "int[]",
                                "c"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "bb"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "tb"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "hp"
                            ]
                        },
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate_trees_dynamic",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "nl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "nd"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "c"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "bl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "bd"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "tl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "td"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "hp"
                            ]
                        },
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate_trees_fixed",
                    [
                        {
                            "py/tuple": [
                                "int[]",
                                "bl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "bd"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[][]",
                                "tl"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[][]",
                                "td"
                            ]
                        },
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "initWorkArea",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "vsize"
                            ]
                        }
                    ],
                    "private"
                ]
            }
        ],
        "name": "InfTree",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/InfTree.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "PRESET_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_PARTIAL_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_SYNC_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FULL_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FINISH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DEFLATED",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "METHOD",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "FLAG",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DICT4",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DICT3",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DICT2",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DICT1",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DICT0",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BLOCKS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "CHECK4",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "CHECK3",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "CHECK2",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "CHECK1",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DONE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BAD",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "HEAD",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LENGTH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "TIME",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "OS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "EXLEN",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "EXTRA",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "NAME",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "COMMENT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "HCRC",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "FLAGS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "INFLATE_ANY",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "mode",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "method",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "was",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "need",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "marker",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "wrap",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "wbits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "InfBlocks",
                    "blocks",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZStream",
                    "z",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "flags",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "need_bytes",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "crcbuf",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "GZIPHeader",
                    "gheader",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "mark",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "java::io::ByteArrayOutputStream",
                    "tmp_string",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "int",
                    "inflateReset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateEnd",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflate",
                    "Inflate",
                    [
                        {
                            "py/tuple": [
                                "ZStream",
                                "z"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "f"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateSetDictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "dictionary"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dictLength"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateSync",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateSyncPoint",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "readBytes",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "n"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "f"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "readString",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "f"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "readBytes",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "f"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "checksum",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "n"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "v"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "GZIPHeader",
                    "getGZIPHeader",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "inParsingHeader",
                    [],
                    "public"
                ]
            }
        ],
        "name": "Inflate",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Inflate.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "r",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "Return",
                    "Return",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "r"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "Return",
        "namespace": "com::jcraft::jzlib::Inflate",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Inflate.java",
        "parents": [
            {
                "py/tuple": [
                    "Exception",
                    "Exception",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEF_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_PARTIAL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_SYNC_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FULL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FINISH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_MEM_LEVEL",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "finished",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "Inflater",
                    "Inflater",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "Inflater",
                    [
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "Inflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        },
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "Inflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "Inflater",
                    [
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "Inflater",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        },
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "init",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "f"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "end",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "sync",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "syncPoint",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "setDictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "dictionary"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dictLength"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "finished",
                    [],
                    "public"
                ]
            }
        ],
        "name": "Inflater",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Inflater.java",
        "parents": [
            {
                "py/tuple": [
                    "ZStream",
                    "ZStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "Inflater",
                    "inflater",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buf",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "closed",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "eof",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "close_in",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEFAULT_BUFSIZE",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "myinflater",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "byte1",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "b",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "InflaterInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "InflaterInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "InflaterInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Inflater",
                                "inflater"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "InflaterInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Inflater",
                                "inflater"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "InflaterInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "Inflater",
                                "inflater"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "close_in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "read",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "read",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "b"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "off"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "available",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "skip",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "n"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "close",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "fill",
                    [],
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "markSupported",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "mark",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "readlimit"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "reset",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "getAvailIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "readHeader",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "getInflater",
                    [],
                    "public"
                ]
            }
        ],
        "name": "InflaterInputStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/InflaterInputStream.java",
        "parents": [
            {
                "py/tuple": [
                    "FilterInputStream",
                    "FilterInputStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "String",
                    "version",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_WBITS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEF_WBITS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "WrapperType",
                    "W_NONE",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "WrapperType",
                    "W_ZLIB",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "WrapperType",
                    "W_GZIP",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "WrapperType",
                    "W_ANY",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_COMPRESSION",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BEST_SPEED",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BEST_COMPRESSION",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DEFAULT_COMPRESSION",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FILTERED",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_HUFFMAN_ONLY",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DEFAULT_STRATEGY",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_PARTIAL_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_SYNC_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FULL_FLUSH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FINISH",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "Z_BINARY",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "Z_ASCII",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte",
                    "Z_UNKNOWN",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "String",
                    "version",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "adler32_combine",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "adler1"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "adler2"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "len2"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "crc32_combine",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "crc1"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "crc2"
                            ]
                        },
                        {
                            "py/tuple": [
                                "long",
                                "len2"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "JZlib",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/JZlib.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_BITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BL_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "D_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LITERALS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LENGTH_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "L_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_BL_BITS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "static_ltree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "static_dtree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "StaticTree",
                    "static_l_desc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "StaticTree",
                    "static_d_desc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "StaticTree",
                    "static_bl_desc",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "static_tree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "extra_bits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "extra_base",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "elems",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "max_length",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "StaticTree",
                    "StaticTree",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "static_tree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int[]",
                                "extra_bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "extra_base"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "elems"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "max_length"
                            ]
                        }
                    ],
                    "private"
                ]
            }
        ],
        "name": "StaticTree",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/StaticTree.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_BITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "BL_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "D_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LITERALS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "LENGTH_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "L_CODES",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "HEAP_SIZE",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_BL_BITS",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "END_BLOCK",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "REP_3_6",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "REPZ_3_10",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "REPZ_11_138",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "extra_lbits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "extra_dbits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "extra_blbits",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "bl_order",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Buf_size",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DIST_CODE_LEN",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "_dist_code",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "_length_code",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "base_length",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int[]",
                    "base_dist",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "short[]",
                    "dyn_tree",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "max_code",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "StaticTree",
                    "stat_desc",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "int",
                    "d_code",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "dist"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "gen_bitlen",
                    [
                        {
                            "py/tuple": [
                                "Deflate",
                                "s"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "build_tree",
                    [
                        {
                            "py/tuple": [
                                "Deflate",
                                "s"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "gen_codes",
                    [
                        {
                            "py/tuple": [
                                "short[]",
                                "tree"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "max_code"
                            ]
                        },
                        {
                            "py/tuple": [
                                "short[]",
                                "bl_count"
                            ]
                        },
                        {
                            "py/tuple": [
                                "short[]",
                                "next_code"
                            ]
                        }
                    ],
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "bi_reverse",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "code"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "private"
                ]
            }
        ],
        "name": "Tree",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/Tree.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "flush",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "compress",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "InputStream",
                    "in",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "Deflater",
                    "deflater",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "InflaterInputStream",
                    "iis",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buf1",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buf",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "ZInputStream",
                    "ZInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZInputStream",
                    "ZInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZInputStream",
                    "ZInputStream",
                    [
                        {
                            "py/tuple": [
                                "InputStream",
                                "in"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "read",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "read",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "b"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "off"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "skip",
                    [
                        {
                            "py/tuple": [
                                "long",
                                "n"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getFlushMode",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setFlushMode",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "close",
                    [],
                    "public"
                ]
            }
        ],
        "name": "ZInputStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/ZInputStream.java",
        "parents": [
            {
                "py/tuple": [
                    "FilterInputStream",
                    "FilterInputStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "bufsize",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "flush",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buf",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "compress",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "OutputStream",
                    "out",
                    "protected"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "end",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "DeflaterOutputStream",
                    "dos",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "Inflater",
                    "inflater",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "buf1",
                    "private"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "ZOutputStream",
                    "ZOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZOutputStream",
                    "ZOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZOutputStream",
                    "ZOutputStream",
                    [
                        {
                            "py/tuple": [
                                "OutputStream",
                                "out"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "write",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "b"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "write",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "b"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "off"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getFlushMode",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setFlushMode",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "finish",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "end",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "close",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "flush",
                    [],
                    "public"
                ]
            }
        ],
        "name": "ZOutputStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/ZOutputStream.java",
        "parents": [
            {
                "py/tuple": [
                    "FilterOutputStream",
                    "FilterOutputStream",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": [
            "java::io"
        ]
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [
            {
                "py/tuple": [
                    "int",
                    "MAX_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "DEF_WBITS",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NO_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_PARTIAL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_SYNC_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FULL_FLUSH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_FINISH",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "MAX_MEM_LEVEL",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_OK",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_END",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_NEED_DICT",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_ERRNO",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_STREAM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_DATA_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_MEM_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_BUF_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "Z_VERSION_ERROR",
                    "private"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "next_in",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "next_in_index",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "avail_in",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "total_in",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "next_out",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "next_out_index",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "avail_out",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "total_out",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "String",
                    "msg",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Deflate",
                    "dstate",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Inflate",
                    "istate",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "data_type",
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "Checksum",
                    "adler",
                    "public"
                ]
            }
        ],
        "methodes": [
            {
                "py/tuple": [
                    "ZStream",
                    "ZStream",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZStream",
                    "ZStream",
                    [
                        {
                            "py/tuple": [
                                "Checksum",
                                "adler"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        },
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "w"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "f"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateEnd",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateSync",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateSyncPoint",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "inflateSetDictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "dictionary"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dictLength"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "inflateFinished",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        },
                        {
                            "py/tuple": [
                                "JZlib::WrapperType",
                                "wrapperType"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "memlevel"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateInit",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "bits"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "nowrap"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflate",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "flush"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateEnd",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateParams",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "level"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "strategy"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "deflateSetDictionary",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "dictionary"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "dictLength"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "flush_pending",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "read_buf",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "start"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "size"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getAdler",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "free",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setOutput",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setOutput",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "off"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setInput",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setInput",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "append"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setInput",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "buf"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "off"
                            ]
                        },
                        {
                            "py/tuple": [
                                "int",
                                "len"
                            ]
                        },
                        {
                            "py/tuple": [
                                "boolean",
                                "append"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "getNextIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setNextIn",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "next_in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getNextInIndex",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setNextInIndex",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "next_in_index"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getAvailIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setAvailIn",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "avail_in"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "byte[]",
                    "getNextOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setNextOut",
                    [
                        {
                            "py/tuple": [
                                "byte[]",
                                "next_out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getNextOutIndex",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setNextOutIndex",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "next_out_index"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "getAvailOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "void",
                    "setAvailOut",
                    [
                        {
                            "py/tuple": [
                                "int",
                                "avail_out"
                            ]
                        }
                    ],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalOut",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "long",
                    "getTotalIn",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "String",
                    "getMessage",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "int",
                    "end",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "boolean",
                    "finished",
                    [],
                    "public"
                ]
            }
        ],
        "name": "ZStream",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/ZStream.java",
        "parents": [],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "classifiers": [],
        "linkedGenericTypes": [],
        "members": [],
        "methodes": [
            {
                "py/tuple": [
                    "ZStreamException",
                    "ZStreamException",
                    [],
                    "public"
                ]
            },
            {
                "py/tuple": [
                    "ZStreamException",
                    "ZStreamException",
                    [
                        {
                            "py/tuple": [
                                "String",
                                "s"
                            ]
                        }
                    ],
                    "public"
                ]
            }
        ],
        "name": "ZStreamException",
        "namespace": "com::jcraft::jzlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/ZStreamException.java",
        "parents": [
            {
                "py/tuple": [
                    "java::io::IOException",
                    "IOException",
                    "public"
                ]
            }
        ],
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractClass",
        "type": "Class",
        "usingNS": []
    },
    {
        "linkedGenericTypes": null,
        "name": "WrapperType",
        "namespace": "com::jcraft::jzlib::JZlib",
        "objectLanguage": 3,
        "origin": "/tests/ressources/code/java_zlib/java/com/jcraft/jzlib/JZlib.java",
        "py/object": "pycodeanalyzer.core.abstraction.objects.AbstractEnum",
        "type": "Enum",
        "usingNS": [],
        "values": [
            "NONE",
            "ZLIB",
            "GZIP",
            "ANY"
        ]
    }
]